// <auto-generated />
using System;
using ApplicantTracking.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicantTracking.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicantTrackingDbContext))]
    partial class ApplicantTrackingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicantTracking.Domain.Entities.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("LastUpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Candidates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1990, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 13, 17, 18, 14, 885, DateTimeKind.Utc).AddTicks(5286),
                            Email = "john@email.com",
                            Name = "John",
                            Surname = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1990, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 13, 17, 18, 14, 885, DateTimeKind.Utc).AddTicks(5309),
                            Email = "paul@email.com",
                            Name = "Paul",
                            Surname = "Doe"
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1990, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 4, 13, 17, 18, 14, 885, DateTimeKind.Utc).AddTicks(5314),
                            Email = "Erick@email.com",
                            Name = "Erick",
                            Surname = "Doe"
                        });
                });

            modelBuilder.Entity("ApplicantTracking.Domain.Entities.Timeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAggregateRoot")
                        .HasColumnType("int");

                    b.Property<byte>("IdTimelineType")
                        .HasColumnType("tinyint");

                    b.Property<string>("NewData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Timelines");
                });
#pragma warning restore 612, 618
        }
    }
}
